if (pdf) {
quartz(width=w,height=h,dpi=144)
web_plot(plot1,create_watermark(source, filename, dark))
quartz.save(paste(filename,"pdf",sep="."), type = "pdf", device = dev.cur())
}
}
max_save(plot, "test", "test")
web_plot <- function(a, b) {
vplayout()
print(a, vp = subplot(1, 1))
print(b, vp = subplot(2, 1))
}
max_save(plot, "test", "test")
vplayout <- function(...) {
grid.newpage()
pushViewport(viewport(layout = web_Layout))
}
max_save(plot, "test", "test")
library(grid)
max_save(plot, "test", "test")
web_Layout <- grid.layout(nrow = 2, ncol = 1, heights = unit(c(2,
0.125), c("null", "null")), )
max_save(plot, "test", "test")
subplot <- function(x, y) viewport(layout.pos.row = x,
layout.pos.col = y)
max_save(plot, "test", "test")
create_watermark <- function(source = '', filename = '', dark=F) {
symbols <- c('','', '', '')
symbol <- symbols[strtoi(substr(digest(filename),1,6), base=36) %% length(symbols)]
if (length(symbol)==0) symbol <- symbols[1]
bg_white = "#F0F0F0"
bg_text = '#969696'
if (dark) {
bg_white = "#000000"
bg_text = '#666666'
}
symbols <- c('','', '', '')
symbol <- symbols[strtoi(substr(digest(filename),1,6), base=36) %% length(symbols)]
if (length(symbol)==0) symbol <- symbols[1]
bg_white = "#F0F0F0"
bg_text = '#969696'
if (dark) {
bg_white = "#000000"
bg_text = '#666666'
}
}
create_watermark <- function(source = '', filename = '', dark=F) {
symbols <- c('','', '', '')
symbol <- symbols[strtoi(substr(digest(filename),1,6), base=36) %% length(symbols)]
if (length(symbol)==0) symbol <- symbols[1]
bg_white = "#F0F0F0"
bg_text = '#969696'
if (dark) {
bg_white = "#000000"
bg_text = '#666666'
}
watermark <- ggplot(aes(x,y), data=data.frame(x=c(0.5), y=c(0.5))) + geom_point(color = "transparent") +
geom_text(x=0, y=0.9, label="By Max Woolf — minimaxir.com", family="Source Sans Pro", color=bg_text, size=1.75, hjust=0) +
geom_text(x=5, y=0.9, label="Made using R and ggplot2", family="Source Sans Pro", color=bg_text, size=1.75) +
#geom_text(x=0, y=1.01, label = symbol, family = 'FontAwesome', color=bg_text, size=2) +
#geom_text(x=8, y=1, label = "via FiveThirtyEight", family="M+ 1m light", color="white") +
scale_x_continuous(limits=c(0,10)) +
scale_y_continuous(limits=c(0.5,1.5)) +
annotate("segment", x = 0, xend = 10, y=1.5, yend=1.5, color=bg_text, size=0.1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.ticks = element_blank(), plot.margin = unit(c(0.1,0,-0.4,0), "cm")) +
theme(plot.background=element_rect(fill=bg_white, color=bg_white),panel.background=element_rect(fill=bg_white, color=bg_white)) +
scale_color_manual(values=bg_text)
if (nchar(source) > 0) {watermark <- watermark + geom_text(x=10, y=0.9, label=paste("Data via",source), family="Source Sans Pro", color=bg_text, size=1.75, hjust=1)}
return (watermark)
}
max_save(plot, "test", "test")
library(digest)
max_save(plot, "test", "test")
theme_custom <- function() {theme_bw(base_size = 8) +
theme(panel.background = element_rect(fill="#eaeaea"),
plot.background = element_rect(fill="white"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color="#dddddd"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(family=fontTitle, size=8, vjust=-.3),
axis.title.y = element_text(family=fontTitle, size=8, vjust=1.5),
panel.border = element_rect(color="#cccccc"),
text = element_text(color = "#1a1a1a", family=fontFamily),
plot.margin = unit(c(0.25,0.1,0.30,0.35), "cm"),
plot.title = element_text(family=fontTitle, size=9, vjust=1))
}
fte_theme <- function (palate_color = "Greys") {
#display.brewer.all(n=9,type="seq",exact.n=TRUE)
palate <- brewer.pal(palate_color, n=9)
color.background = palate[2]
color.grid.minor = palate[3]
color.grid.major = palate[3]
color.axis.text = palate[6]
color.axis.title = palate[7]
color.title = palate[9]
#color.title = "#2c3e50"
font.title <- "Source Sans Pro"
font.axis <- "Open Sans Condensed Bold"
#font.axis <- "M+ 1m regular"
#font.title <- "Arial"
#font.axis <- "Arial"
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
#scale_x_continuous(minor_breaks=0,breaks=seq(0,100,10),limits=c(0,100)) +
#scale_y_continuous(minor_breaks=0,breaks=seq(0,26,4),limits=c(0,25)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=7,colour=color.axis.title,family=font.axis)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(colour=color.title,family=font.title, size=9, vjust=1.25, lineheight=0.1)) +
theme(axis.text.x=element_text(size=7,colour=color.axis.text,family=font.axis)) +
theme(axis.text.y=element_text(size=7,colour=color.axis.text,family=font.axis)) +
theme(axis.title.y=element_text(size=7,colour=color.axis.title,family=font.title, vjust=1.25)) +
theme(axis.title.x=element_text(size=7,colour=color.axis.title,family=font.title, vjust=0)) +
# Big bold line at y=0
#geom_hline(yintercept=0,size=0.75,colour=palate[9]) +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(0.35, 0.2, 0.15, 0.4), "cm")) +
theme(strip.background = element_rect(fill=color.background, color=color.background),strip.text=element_text(size=7,colour=color.axis.title,family=font.title))
}
max_save(plot, "test", "test")
agdq2016_runs <- agdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=6)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
max_save(plot, "test", "test")
fte_theme <- function (palate_color = "Greys") {
#display.brewer.all(n=9,type="seq",exact.n=TRUE)
palate <- brewer.pal(palate_color, n=9)
color.background = palate[2]
color.grid.minor = palate[3]
color.grid.major = palate[3]
color.axis.text = palate[6]
color.axis.title = palate[7]
color.title = palate[9]
#color.title = "#2c3e50"
font.title <- "Source Sans Pro"
font.axis <- "Open Sans Condensed Bold"
#font.axis <- "M+ 1m regular"
#font.title <- "Arial"
#font.axis <- "Arial"
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
#scale_x_continuous(minor_breaks=0,breaks=seq(0,100,10),limits=c(0,100)) +
#scale_y_continuous(minor_breaks=0,breaks=seq(0,26,4),limits=c(0,25)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=12,colour=color.axis.title,family=font.axis)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(colour=color.title,family=font.title, size=12, vjust=1.25, lineheight=0.1)) +
theme(axis.text.x=element_text(size=7,colour=color.axis.text,family=font.axis)) +
theme(axis.text.y=element_text(size=7,colour=color.axis.text,family=font.axis)) +
theme(axis.title.y=element_text(size=7,colour=color.axis.title,family=font.title, vjust=1.25)) +
theme(axis.title.x=element_text(size=7,colour=color.axis.title,family=font.title, vjust=0)) +
# Big bold line at y=0
#geom_hline(yintercept=0,size=0.75,colour=palate[9]) +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(0.35, 0.2, 0.15, 0.4), "cm")) +
theme(strip.background = element_rect(fill=color.background, color=color.background),strip.text=element_text(size=12,colour=color.axis.title,family=font.title))
}
agdq2016_runs <- agdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=6)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
max_save(plot, "test", "test")
theme_custom <- function() {theme_bw(base_size = 12) +
theme(panel.background = element_rect(fill="#eaeaea"),
plot.background = element_rect(fill="white"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color="#dddddd"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(family=fontTitle, size=12, vjust=-.3),
axis.title.y = element_text(family=fontTitle, size=12, vjust=1.5),
panel.border = element_rect(color="#cccccc"),
text = element_text(color = "#1a1a1a", family=fontFamily),
plot.margin = unit(c(0.25,0.1,0.30,0.35), "cm"),
plot.title = element_text(family=fontTitle, size=9, vjust=1))
}
agdq2016_runs <- agdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=6)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
max_save(plot, "test", "test")
fte_theme <- function (palate_color = "Greys") {
#display.brewer.all(n=9,type="seq",exact.n=TRUE)
palate <- brewer.pal(palate_color, n=9)
color.background = palate[2]
color.grid.minor = palate[3]
color.grid.major = palate[3]
color.axis.text = palate[6]
color.axis.title = palate[7]
color.title = palate[9]
#color.title = "#2c3e50"
font.title <- "Source Sans Pro"
font.axis <- "Open Sans Condensed Bold"
#font.axis <- "M+ 1m regular"
#font.title <- "Arial"
#font.axis <- "Arial"
theme_bw(base_size=12) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
#scale_x_continuous(minor_breaks=0,breaks=seq(0,100,10),limits=c(0,100)) +
#scale_y_continuous(minor_breaks=0,breaks=seq(0,26,4),limits=c(0,25)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=12,colour=color.axis.title,family=font.axis)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(colour=color.title,family=font.title, size=12, vjust=1.25, lineheight=0.1)) +
theme(axis.text.x=element_text(size=7,colour=color.axis.text,family=font.axis)) +
theme(axis.text.y=element_text(size=7,colour=color.axis.text,family=font.axis)) +
theme(axis.title.y=element_text(size=7,colour=color.axis.title,family=font.title, vjust=1.25)) +
theme(axis.title.x=element_text(size=7,colour=color.axis.title,family=font.title, vjust=0)) +
# Big bold line at y=0
#geom_hline(yintercept=0,size=0.75,colour=palate[9]) +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(0.35, 0.2, 0.15, 0.4), "cm")) +
theme(strip.background = element_rect(fill=color.background, color=color.background),strip.text=element_text(size=12,colour=color.axis.title,family=font.title))
}
print(plot)
agdq2016_runs <- agdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=6)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
fte_theme <- function (palate_color = "Greys") {
#display.brewer.all(n=9,type="seq",exact.n=TRUE)
palate <- brewer.pal(palate_color, n=9)
color.background = palate[2]
color.grid.minor = palate[3]
color.grid.major = palate[3]
color.axis.text = palate[6]
color.axis.title = palate[7]
color.title = palate[9]
#color.title = "#2c3e50"
font.title <- "Source Sans Pro"
font.axis <- "Open Sans Condensed Bold"
#font.axis <- "M+ 1m regular"
#font.title <- "Arial"
#font.axis <- "Arial"
theme_bw(base_size=12) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
#scale_x_continuous(minor_breaks=0,breaks=seq(0,100,10),limits=c(0,100)) +
#scale_y_continuous(minor_breaks=0,breaks=seq(0,26,4),limits=c(0,25)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=12,colour=color.axis.title,family=font.axis)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(colour=color.title,family=font.title, size=12, vjust=1.25, lineheight=0.1)) +
theme(axis.text.x=element_text(size=12,colour=color.axis.text,family=font.axis)) +
theme(axis.text.y=element_text(size=12,colour=color.axis.text,family=font.axis)) +
theme(axis.title.y=element_text(size=12,colour=color.axis.title,family=font.title, vjust=1.25)) +
theme(axis.title.x=element_text(size=12,colour=color.axis.title,family=font.title, vjust=0)) +
# Big bold line at y=0
#geom_hline(yintercept=0,size=0.75,colour=palate[9]) +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(0.35, 0.2, 0.15, 0.4), "cm")) +
theme(strip.background = element_rect(fill=color.background, color=color.background),strip.text=element_text(size=12,colour=color.axis.title,family=font.title))
}
agdq2016_runs <- agdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=6)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=10)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=11)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=2.5) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
plot <- ggplot(agdq2016_runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
runs <- sgdq2012 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="SGDQ 2012 Runs Which Most $ Donated")
print(plot)
runs <- agdq2013 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2013 Runs Which Most $ Donated")
print(plot)
runs <- sgdq2013 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="SGDQ 2013 Runs Which Most $ Donated")
print(plot)
runs <- sgdq2014 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="SGDQ 2014 Runs Which Most $ Donated")
print(plot)
runs <- agdq2015 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2015 Runs Which Most $ Donated")
print(plot)
runs <- sgdq2015 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="SGDQ 2015 Runs Which Most $ Donated")
print(plot)
runs <- agdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2016 Runs Which Most $ Donated")
print(plot)
runs <- sgdq2016 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="SGDQ 2016 Runs Which Most $ Donated")
print(plot)
runs <- agdq2017 %>% group_by(run) %>%
summarize(total_amount = sum(amount, na.rm=T)) %>%
arrange(desc(total_amount)) %>%
head(15) %>%
mutate(run = sapply(run, twoLine,30)) %>%
mutate(run = factor(run, levels=rev(run)))
plot <- ggplot(runs, aes(x=run, y=total_amount)) +
geom_bar(stat="identity", fill="#2ecc71") +
coord_flip() +
fte_theme() +
geom_text(aes(label=paste0("$",format(round(total_amount), big.mark=","))), color="white", hjust=1.1, family="Open Sans Condensed Bold", size=4) +
theme(axis.title.y = element_blank(), axis.text.y = element_text(size=12)) +
labs(y="Total $ Donated During Run", title="AGDQ 2017 Runs Which Most $ Donated")
print(plot)
